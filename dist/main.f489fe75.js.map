{"version":3,"sources":["GameArea.js","component.js","physics.js","obstacle.js","game.js","main.js"],"names":["image","Image","src","imagesrc","video","document","createElement","setAttribute","navigator","mediaDevices","getUserMedia","then","media","srcObject","play","GameArea","canvas","querySelector","width","height","start","shouldStop","floor","context","getContext","frameNo","lastTime","Date","getTime","currentTime","score","startLoop","requestAnimationFrame","loop","window","addEventListener","e","keys","keyCode","isWalkRight","isWalkLeft","isDancing","clear","clearRect","stop","updateScore","console","log","win","countDown","timer","setInterval","clearInterval","takePicture","fillStyle","fillRect","font","textAlign","fillText","menu","ctx","startGame","removeEventListener","restart","drawImage","img","img2","playerComponent","color","x","y","ticksPerFrame","numberOfFrames","speedX","speedY","frameIndex","tickCount","isJumping","jumpPos","danceTime","update","walkRight","walkLeft","jump","dance","standStill","newPos","delta","image2","physics","spotLight","spotLightSource","Obstacle","crash","newSpot","obj","bottomOfMe","topOfMe","rightOfMe","leftOfMe","bottomOfObj","rightOfObj","leftOfObj","player","obstacle","gameLoop","collision","Math","random","req","cancelAnimationFrame","GAME_STATE"],"mappings":"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","file":"main.f489fe75.js","sourceRoot":"..","sourcesContent":["import { loop, player, GAME_STATE } from \"./game\";\nimport imagesrc from \"./images/testimg.png\";\nconst image = new Image();\nimage.src = imagesrc;\n\nconst video = document.createElement(\"VIDEO\");\nvideo.setAttribute(\"width\", 800);\nvideo.setAttribute(\"height\", 500);\nnavigator.mediaDevices.getUserMedia({ video: true }).then(media => {\n  video.srcObject = media;\n  video.play();\n});\n\n//document.body.appendChild(video);\n\nexport const GameArea = {\n  canvas: document.querySelector(\"#canvas\"),\n  width: 800,\n  height: 500,\n\n  start: function() {\n    this.shouldStop = false;\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.floor = 300;\n    this.context = this.canvas.getContext(\"2d\");\n    this.frameNo = 0; //\n    this.lastTime = new Date().getTime;\n    this.currentTime = 0;\n    this.score = 0;\n    this.startLoop = requestAnimationFrame(loop);\n\n    window.addEventListener(\"keydown\", function(e) {\n      GameArea.keys = GameArea.keys || [];\n      GameArea.keys[e.keyCode] = true;\n    });\n    window.addEventListener(\"keyup\", function(e) {\n      player.isWalkRight = false;\n      player.isWalkLeft = false;\n      player.isDancing = false;\n      GameArea.keys[e.keyCode] = false;\n    });\n  },\n  clear: function() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  },\n  stop: function() {\n    this.shouldStop = true;\n  },\n  updateScore: function() {\n    this.score += 1;\n    console.log(this.score);\n    if (this.score === 2) {\n      this.stop();\n      this.win();\n    }\n  },\n  win: function() {\n    player.isDancing = false;\n    this.score = 0;\n    this.countDown = 4;\n    this.timer = setInterval(() => {\n      if (this.countDown < 1) {\n        clearInterval(this.timer);\n        this.takePicture();\n        return;\n      }\n      this.context.fillStyle = \"hotpink\";\n      this.context.fillRect(0, 0, this.width, this.height);\n      this.context.fillStyle = \"white\";\n      this.context.font = \" 30px arial\";\n      this.context.textAlign = \"center\";\n      if (this.countDown >= 2) {\n        this.context.fillText(\n          \"Wait and see who is the best balerina\",\n          this.width / 2,\n          30\n        );\n      } else {\n        this.context.fillText(\"SMILE\", this.width / 2, 30);\n      }\n      this.context.font = \"70px cursive\";\n      this.context.fillText(\n        `${this.countDown}`,\n        this.width / 2,\n        this.height / 2\n      );\n      this.countDown -= 1;\n    }, 1000);\n    //this.takePicture();\n  },\n  menu: function() {\n    const ctx = this.canvas.getContext(\"2d\");\n\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n\n    ctx.fillStyle = \"rgba(0,0,0,.6)\";\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    ctx.fillStyle = \"white\";\n    ctx.font = \"50px cursive\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(\"Play Game\", this.width / 2, this.height / 3);\n\n    ctx.font = \"35px helvetica\";\n    ctx.fillText(\n      \"Spin in the spotlight to be the best Balerina\",\n      this.width / 2,\n      this.height / 2\n    );\n    ctx.font = \"18px helvetica\";\n    ctx.fillText(\n      \"move the balerina with arrow keys\",\n      this.width / 2,\n      this.height / 2 + 45\n    );\n    ctx.fillText(\n      \"press space bar to spin her\",\n      this.width / 2,\n      this.height / 2 + 75\n    );\n    ctx.font = \"25px arial\";\n    ctx.fillText(\"click anywhere to start\", this.width / 2, this.height - 80);\n    window.addEventListener(\"click\", () => this.startGame());\n  },\n  startGame: () => {\n    console.log(\"donuts\");\n    window.removeEventListener(\"click\", GameArea.startGame);\n    GameArea.start();\n    player.restart();\n  },\n  takePicture: function() {\n    this.context.textAlign = \"center\";\n    this.context.drawImage(video, 0, 0, 800, 675);\n    this.context.fillStyle = \"white\";\n    this.context.font = \"50px cursive\";\n    this.context.fillText(\"Its You!\", this.width / 2, this.height - 100);\n    this.context.font = \"25px helvetica\";\n    this.context.fillText(\n      \"Click anywhere to restart\",\n      this.width / 2,\n      this.height - 50\n    );\n    window.addEventListener(\"click\", this.startGame);\n  },\n};\n\n//--//\n","import { GameArea } from \"./GameArea\";\nimport obstacles from \"./game\";\nimport image from \"./images/ballerinaSprites_right.png\";\nimport image2 from \"./images/ballerinaSprites_left.png\";\nconst img = new Image();\nimg.src = image;\nconst img2 = new Image();\nimg2.src = image2;\nimport player from \"./game\";\n/////////     //     //\nexport default function playerComponent(\n  width,\n  height,\n  color,\n  x,\n  y,\n  ticksPerFrame,\n  numberOfFrames\n) {\n  this.width = width;\n  this.height = height;\n  this.x = x;\n  this.y = y;\n  this.speedX = 0;\n  this.speedY = 0;\n  this.frameIndex = 0;\n  this.tickCount = 0;\n  this.ticksPerFrame = ticksPerFrame || 0;\n  this.numberOfFrames = numberOfFrames || 1;\n  this.isWalkRight = false;\n  this.isJumping = true;\n  this.jumpPos = 0;\n  this.isDancing = false;\n  this.danceTime = 100;\n\n  this.update = function() {\n    const ctx = GameArea.context;\n    //this adds the animations and draws the images based on if the key is pressed\n\n    if (this.isWalkRight) {\n      this.walkRight();\n    } else if (this.isWalkLeft) {\n      this.walkLeft();\n    } else if (this.isJumping) {\n      this.jump();\n    } else if (this.isDancing) {\n      this.dance();\n    } else {\n      this.standStill();\n    }\n  };\n  this.newPos = function(delta) {\n    this.speedY += 0.7; // gravity\n    this.x += this.speedX;\n    this.y += this.speedY;\n    this.speedX *= 0.9; // friction\n    this.speedY *= 0.9; // friction\n\n    // if player is falling below floor line\n    if (this.y > GameArea.floor - this.height) {\n      this.isJumping = false;\n      this.y = GameArea.floor - this.height;\n      this.speedY = 0;\n    }\n  };\n  this.walkRight = function() {\n    const ctx = GameArea.context;\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      if (this.frameIndex < this.numberOfFrames[this.isJumping ? 1 : 0] - 1) {\n        this.frameIndex += 1;\n      } else {\n        this.frameIndex = 0;\n      }\n    }\n    if (!this.isJumping) {\n      ctx.drawImage(\n        img,\n        this.frameIndex * (this.width + 1),\n        0,\n        this.width,\n        this.height,\n        this.x,\n        this.y,\n        this.width,\n        this.height\n      );\n    } else {\n      ctx.drawImage(\n        img,\n        this.frameIndex * (this.width + 1),\n        this.height,\n        this.width,\n        this.height,\n        this.x,\n        this.y,\n        this.width,\n        this.height\n      );\n    }\n  };\n  this.walkLeft = function() {\n    const ctx = GameArea.context;\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      if (this.frameIndex < this.numberOfFrames[this.isJumping ? 1 : 0] - 1) {\n        this.frameIndex += 1;\n      } else {\n        this.frameIndex = 0;\n      }\n    }\n    if (!this.isJumping) {\n      ctx.drawImage(\n        img2,\n        969 - this.frameIndex * this.width,\n        0,\n        this.width,\n        this.height,\n        this.x,\n        this.y,\n        this.width,\n        this.height\n      );\n    } else {\n      ctx.drawImage(\n        img,\n        this.frameIndex * (this.width + 1),\n        this.height,\n        this.width,\n        this.height,\n        this.x,\n        this.y,\n        this.width,\n        this.height\n      );\n    }\n  };\n  this.standStill = function() {\n    const ctx = GameArea.context;\n    ctx.drawImage(\n      img,\n      4,\n      this.height * 2.1,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width - 5,\n      this.height - 5\n    );\n  };\n  this.jump = function() {\n    const ctx = GameArea.context;\n\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      if (this.frameIndex < this.numberOfFrames[1] - 1) {\n        this.frameIndex += 1;\n      } else {\n        this.frameIndex = 0;\n      }\n    }\n\n    ctx.drawImage(\n      img,\n      this.frameIndex * (this.width + 1),\n      this.height,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n  };\n\n  this.dance = function() {\n    const ctx = GameArea.context;\n    if (this.danceTime >= 0) {\n      this.danceTime -= 1;\n    } else {\n      this.danceTime = 100;\n    }\n\n    this.tickCount += 1;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      if (this.frameIndex < this.numberOfFrames[1] - 1) {\n        this.frameIndex += 1;\n      } else {\n        this.frameIndex = 0;\n      }\n    }\n\n    ctx.drawImage(\n      img,\n      this.frameIndex * (this.width + 1),\n      this.height,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n  };\n  this.restart = function() {\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speedX = 0;\n    this.speedY = 0;\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = ticksPerFrame || 0;\n    this.numberOfFrames = numberOfFrames || 1;\n    this.isWalkRight = false;\n    this.isJumping = true;\n    this.jumpPos = 0;\n    this.isDancing = false;\n    this.danceTime = 100;\n  };\n}\n","import { GameArea } from \"./GameArea\";\nexport default function physics(speedX, speedY, x, y) {\n  speedY += 0.7; // gravity\n  x += speedX;\n  y += speedY;\n  speedX *= 0.9; // friction\n  speedY *= 0.9; // friction\n\n  return { speedX, speedY, x, y };\n}\n","import { GameArea } from \"./GameArea\";\nimport physics from \"./physics\";\nimport spotLightSource from \"./images/spotlight.png\";\nconst spotLight = new Image();\nspotLight.src = spotLightSource;\n\nexport default class Obstacle {\n  constructor(width, height, color, x) {\n    this.height = height;\n    this.width = width;\n    this.color = \"rgba(0,0,0,.3)\";\n    this.y = 350;\n    this.x = x;\n    this.speedX = 0;\n    this.speedY = 0;\n    this.crash = false;\n  }\n  update() {\n    const ctx = GameArea.context;\n    ctx.fillStyle = this.color;\n    // ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.drawImage(\n      spotLight,\n      0,\n      -50,\n      500,\n      500,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n  }\n  newPos(delta) {\n    this.speedY += 0.7; // gravity\n    if (this.newSpot <= this.x) {\n      this.speedX -= 4;\n    } else if (this.newSpot >= this.x) {\n      this.speedX += 4;\n    } else {\n      this.speedX = this.x;\n    }\n\n    this.x = this.speedX;\n    this.y += this.speedY;\n    //this.speedX *= 0.9; // friction\n    this.speedY *= 0.9; // friction\n\n    // if player is falling below floor line\n    if (this.y > GameArea.floor - this.height / 1.5) {\n      this.y = GameArea.floor - this.height / 1.5;\n      this.speedY = 0;\n    }\n  }\n\n  collision(obj) {\n    const bottomOfMe = this.y + this.height,\n      topOfMe = this.y,\n      rightOfMe = this.x,\n      leftOfMe = this.x + this.width;\n    const bottomOfObj = obj.y + obj.height,\n      topOfObj = obj.y,\n      rightOfObj = obj.x,\n      leftOfObj = obj.x + obj.width;\n\n    if (\n      leftOfMe > rightOfObj &&\n      rightOfMe < leftOfObj &&\n      topOfMe < bottomOfObj\n    ) {\n      this.crash = true;\n    } else {\n      this.crash = false;\n    }\n\n    return this.crash;\n  }\n}\n","import playerComponent from \"./component\";\nimport { GameArea } from \"./GameArea\";\nimport Obstacle from \"./obstacle\";\n\n// starts the game\n\nfunction startGame() {\n  GameArea.menu();\n}\n// creation of our ballerina\nexport const player = new playerComponent(53, 73, \"red\", 100, 100, 4, [8, 18]);\n\nconst obstacle = new Obstacle(150, 100, \"black\", 400);\nGameArea.GAME_STATE = \"GAME_START\";\nconsole.log(\"object\");\n// Causes all Changes in the Game\n// put all events in between clear and update\nfunction gameLoop(delta) {\n  GameArea.clear();\n\n  if (GameArea.keys && GameArea.keys[37] && player.x > 0 + player.width / 2) {\n    player.isWalkLeft = true;\n    player.speedX -= 0.5;\n  }\n  if (\n    GameArea.keys &&\n    GameArea.keys[39] &&\n    player.x < GameArea.canvas.width - player.width * 1.5\n  ) {\n    player.isWalkRight = true;\n    player.speedX += 0.5;\n  }\n  if (GameArea.keys && GameArea.keys[38] && player.isJumping == false) {\n    player.speedY -= 25;\n    player.isJumping = true;\n  }\n  if (GameArea.keys && GameArea.keys[32]) {\n    player.isDancing = true;\n  }\n\n  player.update();\n  obstacle.update();\n\n  player.newPos(delta);\n\n  if (obstacle.collision(player) && player.isDancing && player.danceTime == 0) {\n    obstacle.newSpot = Math.floor(Math.random() * 600);\n\n    GameArea.updateScore();\n  }\n  GameArea.context.fillStyle = \"black\";\n  GameArea.context.font = \"20px arial\";\n  GameArea.context.textAlign = \"center\";\n  GameArea.context.fillText(`score:${GameArea.score}`, GameArea.width / 2, 40);\n\n  obstacle.newPos(delta);\n}\n\n/* \n this is Called by GameArea to update the game\n it calls the game loop function which causes the Changes in the canvas\n*/\nexport function loop() {\n  const req = requestAnimationFrame(loop);\n  GameArea.currentTime = new Date().getTime();\n  const delta = (GameArea.currentTime - GameArea.lastTime) / 1000;\n  gameLoop(delta);\n\n  GameArea.lastTime = GameArea.currentTime;\n\n  if (GameArea.shouldStop) {\n    cancelAnimationFrame(req);\n  }\n  GameArea.shouldStop = false;\n}\n\nstartGame();\n","import \"./main.scss\";\nimport \"./game\";\n////\n//\n//\n///\n//////\n////\n///\n"]}